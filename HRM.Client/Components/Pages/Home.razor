@page "/"
@rendermode InteractiveServer
<PageTitle>Trang chủ</PageTitle>

<div class="h-breadcrumb d-flex justify-content-between align-items-center">
    <div style="width: 100%;">
        <ol class="breadcrumb mx-2 py-1" aria-label="breadcrumbs">
            <li class="breadcrumb-item active" aria-current="page"><a href="#">Trang chủ - Lịch làm việc</a></li>
        </ol>
    </div>
    <div style="width: fit-content; cursor: pointer;">
        <i class="fa-regular fa-star px-2"></i>
    </div>
</div>

<div class="h-content-filter">
    <div class="card card-lg mt-1" style="padding: 5px">
        <div class="row row-gap-1">
            <div class="col-12">
                <DxScheduler @bind-StartDate="@StartDate"
                             DataStorage="@DataStorage"
                             CssClass="w-100">
                    <DxSchedulerMonthView MonthCount="1" ShowWorkDaysOnly="false" CellMinWidth="120">
                        <VerticalResourceHeaderCellTemplate>
                            <div class="" style="display: flex; flex-direction: row; align-items: center;">
                                <div style="padding: 0.4725rem;">@context.Resource.Caption AC</div>
                            </div>
                        </VerticalResourceHeaderCellTemplate>
                        @* <DateHeaderCellTemplate>
                            <div style="display: flex;">
                                <div class="dxbs-sc-date-hr-wrapper" style="width: 100%;">
                                    <span class="dxbs-sc-date-hr-day">@context.Interval.Start.Day</span>
                                    <span class="dxbs-sc-date-hr-week">@context.Interval.Start.ToString("ddd")</span>
                                </div>
                            </div>
                        </DateHeaderCellTemplate> *@
                    </DxSchedulerMonthView>
                </DxScheduler>
            </div>
        </div>
    </div>
</div>

@code{
    DateTime StartDate { get; set; } = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1);
    DateTime EndDate { get; set; } = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1);
    DxSchedulerDataStorage DataStorage = new DxSchedulerDataStorage()
        {
            AppointmentsSource = null,
            AppointmentMappings = new DxSchedulerAppointmentMappings()
            {
                Type = "AppointmentType",
                Start = "StartDate",
                End = "EndDate",
                Subject = "Caption",
                AllDay = "AllDay",
                Location = "Location",
                Description = "Description",
                LabelId = "Label",
                StatusId = "Status",
                RecurrenceInfo = "Recurrence"
            }
        };
}